{"ast":null,"code":"import _objectSpread from \"/Users/waimansing/Documents/3 Companies/1 KitmanStore/admin-purchase/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/waimansing/Documents/3 Companies/1 KitmanStore/admin-purchase/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/waimansing/Documents/3 Companies/1 KitmanStore/admin-purchase/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/waimansing/Documents/3 Companies/1 KitmanStore/admin-purchase/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/waimansing/Documents/3 Companies/1 KitmanStore/admin-purchase/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/waimansing/Documents/3 Companies/1 KitmanStore/admin-purchase/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/waimansing/Documents/3 Companies/1 KitmanStore/admin-purchase/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/waimansing/Documents/3 Companies/1 KitmanStore/admin-purchase/src/components/purchases/purchase.js\";\nimport React, { Component } from 'react';\nimport './purchase.css';\nimport ReactDataGrid from 'react-data-grid';\nimport { Toolbar } from 'react-data-grid-addons';\nimport Api from \"../api/api\";\n\nvar Purchase =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Purchase, _Component);\n\n  function Purchase() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Purchase);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Purchase)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onGridRowsUpdated = function (_ref) {\n      var fromRow = _ref.fromRow,\n          toRow = _ref.toRow,\n          updated = _ref.updated;\n\n      //如果没有变 return\n      var updatedPurchase = _toConsumableArray(_this.props.purchase);\n\n      if (updatedPurchase[fromRow].provider === updated.provider) {\n        return;\n      }\n\n      _this.props.onRowUpdate(fromRow, toRow, updated);\n    };\n\n    _this.handleFilterChange = function (filter) {\n      console.log('filterTerm: ' + filter.filterTerm);\n      console.log('filter key: ' + filter.column.key);\n      var filterPurchase = _this.state.purchase;\n\n      if (!filter.filterTerm) {\n        _this.setState({\n          filterPurchase: _this.state.purchase\n        });\n\n        return;\n      }\n\n      filterPurchase = filterPurchase.filter(function (purchase) {\n        //1 product\n        if (filter.column.key === 'provider') {\n          var providerName = purchase.provider.toString().toLowerCase();\n          return providerName.indexOf(filter.filterTerm.toString().toLowerCase()) !== -1;\n        } //2 provider\n\n\n        if (filter.column.key === 'product') {\n          var productName = purchase.product.toString().toLowerCase();\n          console.log('productName: ' + productName);\n          return productName.indexOf(filter.filterTerm.toString().toLowerCase()) !== -1;\n        }\n      });\n\n      _this.setState({\n        filterPurchase: filterPurchase\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Purchase, [{\n    key: \"componentWillMount\",\n    /// Lifecycle\n    // Begin...\n    value: function componentWillMount() {\n      console.log(\"componentWillMount...\"); //1\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"componentDidMount...\"); //2\n    } // If update happen..\n\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps, nextContext) {\n      console.log(\"componentWillReceiveProps...\"); //3\n    }\n  }, {\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate(nextProps, nextState, nextContext) {\n      console.log(\"componentWillUpdate...\"); //4\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      console.log(\"componentDidUpdate...\"); //5\n    } // Update end.\n    // End.\n    // Update -> notify parent\n\n  }, {\n    key: \"onDelete\",\n    //Delete\n    value: function onDelete(args) {\n      var _this2 = this;\n\n      if (!window.confirm(\"确定删除？\")) {\n        return;\n      }\n\n      Api.delete('purchase/' + args.rowId).then(function (res) {\n        console.log(res);\n\n        _this2.getPurchase();\n      }).catch(function (error) {\n        alert(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var defaultColumnProperties = {\n        resizable: true\n      };\n      var columns = [{\n        key: 'index',\n        name: 'No.',\n        editable: false,\n        width: 50\n      }, {\n        key: 'purchaseDate',\n        name: '日期',\n        editable: true,\n        width: 100\n      }, {\n        key: 'provider',\n        name: '供应商',\n        editable: true,\n        filterable: true,\n        width: 250\n      }, {\n        key: 'product',\n        name: '商品名',\n        editable: true,\n        filterable: true,\n        width: 250\n      }, {\n        key: 'quantity',\n        name: '数量',\n        editable: true,\n        width: 50\n      }, {\n        key: 'price_purchase',\n        name: '单价($HKD)',\n        editable: true,\n        width: 120\n      }, {\n        key: 'totalPrice',\n        name: '总价($HKD)',\n        editable: false,\n        width: 120\n      }, {\n        key: 'currentQuantity',\n        name: '存量',\n        editable: true,\n        width: 50\n      }, {\n        key: 'marketPrice',\n        name: '定价($HKD)',\n        editable: true,\n        width: 120\n      }, {\n        key: 'remark',\n        name: 'Remark',\n        editable: true\n      }, {\n        key: 'delete',\n        name: '操作',\n        editable: false,\n        events: {\n          onClick: function onClick(ev, args) {\n            _this3.onDelete(args);\n          }\n        }\n      }].map(function (c) {\n        return _objectSpread({}, c, defaultColumnProperties);\n      });\n\n      if (this.props.isLoading) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, \"Loading....\");\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"\\u91C7\\u8D2D\\u5217\\u8868\"), React.createElement(ReactDataGrid, {\n        toolbar: React.createElement(Toolbar, {\n          enableFilter: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }),\n        onAddFilter: this.handleFilterChange,\n        columns: columns,\n        rowGetter: function rowGetter(i) {\n          return _this3.props.purchase[i];\n        },\n        rowsCount: this.props.purchase.length,\n        enableCellSelect: true,\n        minHeight: 500,\n        enableCellAutoFocus: false,\n        onGridRowsUpdated: this.onGridRowsUpdated,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Purchase;\n}(Component);\n\nexport default Purchase;","map":{"version":3,"sources":["/Users/waimansing/Documents/3 Companies/1 KitmanStore/admin-purchase/src/components/purchases/purchase.js"],"names":["React","Component","ReactDataGrid","Toolbar","Api","Purchase","onGridRowsUpdated","fromRow","toRow","updated","updatedPurchase","props","purchase","provider","onRowUpdate","handleFilterChange","filter","console","log","filterTerm","column","key","filterPurchase","state","setState","providerName","toString","toLowerCase","indexOf","productName","product","nextProps","nextContext","nextState","prevProps","prevState","snapshot","args","window","confirm","delete","rowId","then","res","getPurchase","catch","error","alert","defaultColumnProperties","resizable","columns","name","editable","width","filterable","events","onClick","ev","onDelete","map","c","isLoading","i","length"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './purchase.css'\nimport ReactDataGrid from 'react-data-grid';\nimport {Toolbar} from 'react-data-grid-addons'\n\nimport Api from \"../api/api\";\n\n\nclass Purchase extends Component {\n\n    /// Lifecycle\n    // Begin...\n    componentWillMount() {\n        console.log(\"componentWillMount...\") //1\n    }\n\n    componentDidMount() {\n        console.log(\"componentDidMount...\") //2\n    }\n\n    // If update happen..\n    componentWillReceiveProps(nextProps, nextContext) {\n        console.log(\"componentWillReceiveProps...\") //3\n    }\n\n    componentWillUpdate(nextProps, nextState, nextContext) {\n        console.log(\"componentWillUpdate...\") //4\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        console.log(\"componentDidUpdate...\") //5\n    }\n    // Update end.\n    // End.\n\n    // Update -> notify parent\n    onGridRowsUpdated = ({fromRow, toRow, updated}) => {\n        //如果没有变 return\n        let updatedPurchase = [...this.props.purchase]\n        if (updatedPurchase[fromRow].provider === updated.provider){\n            return\n        }\n\n        this.props.onRowUpdate(fromRow, toRow, updated)\n    };\n\n    // Update\n    handleFilterChange = (filter) => {\n        console.log('filterTerm: ' + filter.filterTerm)\n        console.log('filter key: ' + filter.column.key)\n        let filterPurchase = this.state.purchase\n        if (!filter.filterTerm) {\n            this.setState({\n                filterPurchase: this.state.purchase\n            })\n            return\n        }\n\n        filterPurchase = filterPurchase.filter((purchase) => {\n            //1 product\n            if (filter.column.key === 'provider') {\n                let providerName = purchase.provider.toString().toLowerCase()\n                return providerName.indexOf(\n                    filter.filterTerm.toString().toLowerCase()) !== -1\n            }\n            //2 provider\n            if (filter.column.key === 'product') {\n                let productName = purchase.product.toString().toLowerCase()\n                console.log('productName: ' + productName)\n\n                return productName.indexOf(\n                    filter.filterTerm.toString().toLowerCase()) !== -1\n            }\n        })\n        this.setState({\n            filterPurchase: filterPurchase\n        })\n    };\n\n    //Delete\n    onDelete(args) {\n        if (!window.confirm(\"确定删除？\")) {\n            return\n        }\n        Api.delete('purchase/' + args.rowId)\n            .then(res => {\n                console.log(res)\n                this.getPurchase()\n            }).catch(error => {\n            alert(error)\n        })\n    }\n\n    render() {\n        const defaultColumnProperties = {\n            resizable: true,\n        };\n        const columns = [\n            {key: 'index', name: 'No.', editable: false, width: 50},\n            {key: 'purchaseDate', name: '日期', editable: true, width: 100},\n            {key: 'provider', name: '供应商', editable: true, filterable: true, width: 250},\n            {key: 'product', name: '商品名', editable: true, filterable: true, width: 250},\n            {key: 'quantity', name: '数量', editable: true, width: 50},\n            {key: 'price_purchase', name: '单价($HKD)', editable: true, width: 120},\n            {key: 'totalPrice', name: '总价($HKD)', editable: false, width: 120},\n            {key: 'currentQuantity', name: '存量', editable: true, width: 50},\n            {key: 'marketPrice', name: '定价($HKD)', editable: true, width: 120},\n            {key: 'remark', name: 'Remark', editable: true},\n            {\n                key: 'delete', name: '操作', editable: false,\n                events: {\n                    onClick: (ev, args) => {\n                        this.onDelete(args);\n                    }\n                }\n            },\n        ].map(c => ({...c, ...defaultColumnProperties}));\n\n        if (this.props.isLoading) {\n            return <p>Loading....</p>\n        }\n\n        return (\n            <div>\n                <h3>采购列表</h3>\n\n                <ReactDataGrid\n                    toolbar={<Toolbar enableFilter={true}/>}\n                    onAddFilter={this.handleFilterChange}\n                    columns={columns}\n                    rowGetter={i => this.props.purchase[i]}\n                    rowsCount={this.props.purchase.length}\n                    enableCellSelect={true}\n                    minHeight={500}\n                    enableCellAutoFocus={false}\n                    onGridRowsUpdated={this.onGridRowsUpdated}\n                />\n            </div>\n        );\n    }\n\n}\n\n\nexport default Purchase;\n"]},"metadata":{},"sourceType":"module"}