"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _csv = _interopRequireDefault(require("./lib/csv"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

(function () {
  var enterModule = require('react-hot-loader').enterModule;

  enterModule && enterModule(module);
})();

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var PrefixSuffixType = _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.string, _propTypes.default.number]);

var CsvDownload =
/*#__PURE__*/
function (_Component) {
  _inherits(CsvDownload, _Component);

  function CsvDownload() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, CsvDownload);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CsvDownload)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "state", {
      // eslint-disable-next-line react/destructuring-assignment
      csv: (0, _csv.default)(_this.props.columns, _this.props.datas, _this.props.separator, _this.props.noHeader)
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "handleClick", function () {
      var _this$props = _this.props,
          suffix = _this$props.suffix,
          prefix = _this$props.prefix,
          bom = _this$props.bom;
      var csv = _this.state.csv;
      var bomCode = bom ? "\uFEFF" : '';
      var filename = _this.props.filename;

      if (filename.indexOf('.csv') === -1) {
        filename += '.csv';
      }

      if (suffix) {
        if (typeof suffix === 'string' || typeof suffix === 'number') {
          filename = filename.replace('.csv', "_".concat(suffix, ".csv"));
        } else {
          filename = filename.replace('.csv', "_".concat(new Date().getTime(), ".csv"));
        }
      }

      if (prefix) {
        if (typeof prefix === 'string' || typeof prefix === 'number') {
          filename = "".concat(prefix, "_").concat(filename);
        } else {
          filename = "".concat(new Date().getTime(), "_").concat(filename);
        }
      }

      var a = document.createElement('a');
      var blob = new Blob(["".concat(bomCode).concat(csv)], {
        type: 'text/csv;charset=utf-8'
      });
      a.textContent = 'download';
      a.download = filename;
      a.href = URL.createObjectURL(blob);
      a.dispatchEvent(new MouseEvent('click', {
        view: window,
        bubbles: true,
        cancelable: false
      }));
    });

    return _this;
  }

  _createClass(CsvDownload, [{
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(props) {
      this.setState({
        csv: (0, _csv.default)(props.columns, props.datas, props.separator, props.noHeader)
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          children = _this$props2.children,
          text = _this$props2.text;

      if (typeof children === 'undefined') {
        return _react.default.createElement("button", {
          onClick: this.handleClick,
          type: "button"
        }, function () {
          if (text) {
            return text;
          }

          return 'Download';
        }());
      }

      return _react.default.createElement("div", {
        onClick: this.handleClick,
        onKeyPress: this.handleClick,
        role: "button",
        tabIndex: 0
      }, children);
    }
  }, {
    key: "__reactstandin__regenerateByEval",
    // @ts-ignore
    value: function __reactstandin__regenerateByEval(key, code) {
      // @ts-ignore
      this[key] = eval(code);
    }
  }]);

  return CsvDownload;
}(_react.Component);

exports.default = CsvDownload;

_defineProperty(CsvDownload, "propTypes", {
  bom: _propTypes.default.bool,
  children: _propTypes.default.oneOfType([_propTypes.default.array, _propTypes.default.string, _propTypes.default.element]),
  columns: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.array, _propTypes.default.arrayOf(_propTypes.default.object)]),
  datas: _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array])).isRequired,
  filename: _propTypes.default.string.isRequired,
  noHeader: _propTypes.default.bool,
  prefix: PrefixSuffixType,
  separator: _propTypes.default.string,
  text: _propTypes.default.string,
  suffix: PrefixSuffixType
});

_defineProperty(CsvDownload, "defaultProps", {
  separator: ',',
  columns: false,
  bom: true,
  noHeader: false
});

;

(function () {
  var reactHotLoader = require('react-hot-loader').default;

  var leaveModule = require('react-hot-loader').leaveModule;

  if (!reactHotLoader) {
    return;
  }

  reactHotLoader.register(PrefixSuffixType, "PrefixSuffixType", "/mnt/c/Dev/repos/react-csv-downloader/src/index.js");
  reactHotLoader.register(CsvDownload, "CsvDownload", "/mnt/c/Dev/repos/react-csv-downloader/src/index.js");
  leaveModule(module);
})();

;